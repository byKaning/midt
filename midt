from sklearn.preprocessing import LabelEncoder
from sklearn.tree import plot_tree, DecisionTreeClassifier
import matplotlib.pyplot as plt
import sklearn.ensemble 
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split,GridSearchCV,\
    RandomizedSearchCV

File_path = 'D:/data/'
File_name = 'car_data.csv'

df = pd.read_csv(File_path + File_name)

df.drop(inplace = True)

df.drop(columns=['UserID'],inplace = True)

encode = []
for i in range(0,len(df.columns) -1):
    enc = LabelEncoder()
    df.iloc[:,i] = enc.fit_transform(df.iloc[:,i])
    encode.append(enc)

x = df.iloc[:, 0:4]
y = df['Purchased']

model = DecisionTreeClassifier()(criterion = 'entropy')
model.fit(x, y)
x_train,x_test,y_train,y_test = train_test_split(x,y, random_state=0)

feature = x.columns.tolist()
Data_class = y.tolist()

plt.figure(figsize=(25,20))
_=plot_tree(model,
            feature_names= feature,
            class_names= Data_class,
            label= 'all',
            impurity= True,
            precision= 3,
            filled= True,
            rounded= True,
            fontsize= 16)

plt.show()

feature_improtancns = model.feature_improtancns_
feature_names = ['Gender','Age',
                 'AnnualSalary',]

sns.set(rc={'figure.figsize':(11.7,8.27)})
sns.barplot(x = feature_improtancns, y =  feature_names)

print(feature_improtancns)




